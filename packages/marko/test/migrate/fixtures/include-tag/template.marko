<!-- Import: basic -->
<include("./example-a.marko")/>
<!-- Import: duplicated -->
<include("./example-a.marko") x=1/>
<!-- Import: with attributes -->
<include("./example-b.marko") ...{ a: 1 } b=2/>
<!-- Import: index -->
<include("./example-c/index.marko")/>
<!-- Import: name conflict -->
$ const ExampleD = undefined;
<include("./example-d.marko")/>
<!-- Import: with body -->
<include("./example-e/index.marko")>
    <div>Hi</div>
</include>
<!-- Import: complex path -->
<include("../../../hello/example-f.marko")/>
<!-- Import: complex path name conflict -->
<include("../../../hello2/example-f.marko")/>
<!-- Import: complex path index -->
<include("../../../hello/example-h/index.marko")/>
<!-- Dynamic: basic -->
<include(input.x)/>
<!-- Dynamic: with attributes -->
<include(input.x, { a: 1 }) ...{ b: 2 } c=3/>
<!-- Dynamic: with body -->
<include(input.x)>
    <div>Hi</div>
</include>
<!-- Directive -->
<div include(x, { a: 1 })>
    <span/>
</div>
<!-- Include complex expression -->
<include(input.x ? a : b)/>
<!-- Include complex expression 2 -->
<include(a())/>